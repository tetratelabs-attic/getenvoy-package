// Copyright 2019 Tetrate
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/manifest.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Compliances should be single word, no underscores
type Compliance int32

const (
	Compliance_FIPS1402 Compliance = 0
)

var Compliance_name = map[int32]string{
	0: "FIPS1402",
}

var Compliance_value = map[string]int32{
	"FIPS1402": 0,
}

func (x Compliance) String() string {
	return proto.EnumName(Compliance_name, int32(x))
}

func (Compliance) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_346685e380de5b1f, []int{0}
}

// Default must be unknown in order to sort correctly
type Build_Platform int32

const (
	Build_UNKNOWN          Build_Platform = 0
	Build_DARWIN           Build_Platform = 1
	Build_WINDOWS          Build_Platform = 2
	Build_LINUX_GLIBC_2_17 Build_Platform = 3
	Build_LINUX_GLIBC_2_18 Build_Platform = 4
)

var Build_Platform_name = map[int32]string{
	0: "UNKNOWN",
	1: "DARWIN",
	2: "WINDOWS",
	3: "LINUX_GLIBC_2_17",
	4: "LINUX_GLIBC_2_18",
}

var Build_Platform_value = map[string]int32{
	"UNKNOWN":          0,
	"DARWIN":           1,
	"WINDOWS":          2,
	"LINUX_GLIBC_2_17": 3,
	"LINUX_GLIBC_2_18": 4,
}

func (x Build_Platform) String() string {
	return proto.EnumName(Build_Platform_name, int32(x))
}

func (Build_Platform) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_346685e380de5b1f, []int{3, 0}
}

type Manifest struct {
	ManifestVersion string `protobuf:"bytes,1,opt,name=manifest_version,json=manifestVersion,proto3" json:"manifest_version,omitempty"`
	// Key is the flavor name
	Flavors              map[string]*Flavor `protobuf:"bytes,2,rep,name=flavors,proto3" json:"flavors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Manifest) Reset()         { *m = Manifest{} }
func (m *Manifest) String() string { return proto.CompactTextString(m) }
func (*Manifest) ProtoMessage()    {}
func (*Manifest) Descriptor() ([]byte, []int) {
	return fileDescriptor_346685e380de5b1f, []int{0}
}

func (m *Manifest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Manifest.Unmarshal(m, b)
}
func (m *Manifest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Manifest.Marshal(b, m, deterministic)
}
func (m *Manifest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Manifest.Merge(m, src)
}
func (m *Manifest) XXX_Size() int {
	return xxx_messageInfo_Manifest.Size(m)
}
func (m *Manifest) XXX_DiscardUnknown() {
	xxx_messageInfo_Manifest.DiscardUnknown(m)
}

var xxx_messageInfo_Manifest proto.InternalMessageInfo

func (m *Manifest) GetManifestVersion() string {
	if m != nil {
		return m.ManifestVersion
	}
	return ""
}

func (m *Manifest) GetFlavors() map[string]*Flavor {
	if m != nil {
		return m.Flavors
	}
	return nil
}

type Flavor struct {
	// Name is the composite key of the value's filter_profile and compliance
	// Format: filter_profile or filter_profile-compliance1-compliance2
	// Examples: standard, istio-fips1402
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Filter profile is the name of the collection of filters
	// Examples: standard, istio, minimal
	FilterProfile string `protobuf:"bytes,2,opt,name=filter_profile,json=filterProfile,proto3" json:"filter_profile,omitempty"`
	// All filters available in this flavor
	Filters []string `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Compliance requirements met by this flavor
	Compliances []Compliance `protobuf:"varint,4,rep,packed,name=compliances,proto3,enum=api.Compliance" json:"compliances,omitempty"`
	// Key is the version's name
	Versions             map[string]*Version `protobuf:"bytes,5,rep,name=versions,proto3" json:"versions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Flavor) Reset()         { *m = Flavor{} }
func (m *Flavor) String() string { return proto.CompactTextString(m) }
func (*Flavor) ProtoMessage()    {}
func (*Flavor) Descriptor() ([]byte, []int) {
	return fileDescriptor_346685e380de5b1f, []int{1}
}

func (m *Flavor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flavor.Unmarshal(m, b)
}
func (m *Flavor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flavor.Marshal(b, m, deterministic)
}
func (m *Flavor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flavor.Merge(m, src)
}
func (m *Flavor) XXX_Size() int {
	return xxx_messageInfo_Flavor.Size(m)
}
func (m *Flavor) XXX_DiscardUnknown() {
	xxx_messageInfo_Flavor.DiscardUnknown(m)
}

var xxx_messageInfo_Flavor proto.InternalMessageInfo

func (m *Flavor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Flavor) GetFilterProfile() string {
	if m != nil {
		return m.FilterProfile
	}
	return ""
}

func (m *Flavor) GetFilters() []string {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *Flavor) GetCompliances() []Compliance {
	if m != nil {
		return m.Compliances
	}
	return nil
}

func (m *Flavor) GetVersions() map[string]*Version {
	if m != nil {
		return m.Versions
	}
	return nil
}

type Version struct {
	// Name is the Envoy version
	// Examples: 1.10.0, 1.11.0, nightly
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Key is the build's platform
	Builds               map[string]*Build `protobuf:"bytes,5,rep,name=builds,proto3" json:"builds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_346685e380de5b1f, []int{2}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Version) GetBuilds() map[string]*Build {
	if m != nil {
		return m.Builds
	}
	return nil
}

type Build struct {
	Platform             Build_Platform `protobuf:"varint,1,opt,name=platform,proto3,enum=api.Build_Platform" json:"platform,omitempty"`
	DownloadLocationUrl  string         `protobuf:"bytes,2,opt,name=download_location_url,json=downloadLocationUrl,proto3" json:"download_location_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Build) Reset()         { *m = Build{} }
func (m *Build) String() string { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()    {}
func (*Build) Descriptor() ([]byte, []int) {
	return fileDescriptor_346685e380de5b1f, []int{3}
}

func (m *Build) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Build.Unmarshal(m, b)
}
func (m *Build) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Build.Marshal(b, m, deterministic)
}
func (m *Build) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Build.Merge(m, src)
}
func (m *Build) XXX_Size() int {
	return xxx_messageInfo_Build.Size(m)
}
func (m *Build) XXX_DiscardUnknown() {
	xxx_messageInfo_Build.DiscardUnknown(m)
}

var xxx_messageInfo_Build proto.InternalMessageInfo

func (m *Build) GetPlatform() Build_Platform {
	if m != nil {
		return m.Platform
	}
	return Build_UNKNOWN
}

func (m *Build) GetDownloadLocationUrl() string {
	if m != nil {
		return m.DownloadLocationUrl
	}
	return ""
}

func init() {
	proto.RegisterEnum("api.Compliance", Compliance_name, Compliance_value)
	proto.RegisterEnum("api.Build_Platform", Build_Platform_name, Build_Platform_value)
	proto.RegisterType((*Manifest)(nil), "api.Manifest")
	proto.RegisterMapType((map[string]*Flavor)(nil), "api.Manifest.FlavorsEntry")
	proto.RegisterType((*Flavor)(nil), "api.Flavor")
	proto.RegisterMapType((map[string]*Version)(nil), "api.Flavor.VersionsEntry")
	proto.RegisterType((*Version)(nil), "api.Version")
	proto.RegisterMapType((map[string]*Build)(nil), "api.Version.BuildsEntry")
	proto.RegisterType((*Build)(nil), "api.Build")
}

func init() { proto.RegisterFile("api/manifest.proto", fileDescriptor_346685e380de5b1f) }

var fileDescriptor_346685e380de5b1f = []byte{
	// 481 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0xcb, 0x6e, 0x9b, 0x40,
	0x18, 0x85, 0x83, 0xf1, 0x05, 0xff, 0x38, 0x0e, 0x9a, 0xb4, 0x12, 0x65, 0x45, 0x2d, 0x55, 0xa2,
	0x5d, 0x90, 0x98, 0xa6, 0x6a, 0xd4, 0x5d, 0x73, 0x15, 0xaa, 0x4b, 0x2c, 0x22, 0xd7, 0x5d, 0x54,
	0x42, 0x13, 0x1b, 0xa4, 0x51, 0xc7, 0x0c, 0x02, 0xec, 0x2a, 0xaf, 0xd1, 0x45, 0x9f, 0xa4, 0x4f,
	0xd1, 0xa7, 0xaa, 0x32, 0x17, 0x07, 0x4b, 0xde, 0x0d, 0xdf, 0xf9, 0xff, 0xc3, 0xd1, 0x19, 0x00,
	0x84, 0x0b, 0x72, 0xb2, 0xc2, 0x39, 0xc9, 0xd2, 0xaa, 0xf6, 0x8b, 0x92, 0xd5, 0x0c, 0xe9, 0xb8,
	0x20, 0xa3, 0xbf, 0x1a, 0x18, 0x5f, 0x25, 0x47, 0x6f, 0xc1, 0x52, 0x33, 0xc9, 0x26, 0x2d, 0x2b,
	0xc2, 0x72, 0x5b, 0x73, 0x35, 0xaf, 0x1f, 0x1f, 0x29, 0xfe, 0x4d, 0x60, 0x74, 0x06, 0xbd, 0x8c,
	0xe2, 0x0d, 0x2b, 0x2b, 0xbb, 0xe5, 0xea, 0x9e, 0x19, 0x38, 0x3e, 0x2e, 0x88, 0xaf, 0xac, 0xfc,
	0x1b, 0x21, 0x5e, 0xe7, 0x75, 0xf9, 0x18, 0xab, 0x51, 0xe7, 0x16, 0x06, 0x4d, 0x01, 0x59, 0xa0,
	0xff, 0x4c, 0x1f, 0xe5, 0x3b, 0x9e, 0x8e, 0xe8, 0x35, 0x74, 0x36, 0x98, 0xae, 0x53, 0xbb, 0xe5,
	0x6a, 0x9e, 0x19, 0x98, 0xdc, 0x55, 0xec, 0xc4, 0x42, 0xf9, 0xd4, 0x3a, 0xd7, 0x46, 0xbf, 0x5b,
	0xd0, 0x15, 0x14, 0x21, 0x68, 0xe7, 0x78, 0x95, 0x4a, 0x13, 0x7e, 0x46, 0x6f, 0x60, 0x98, 0x11,
	0x5a, 0xa7, 0x65, 0x52, 0x94, 0x2c, 0x23, 0x54, 0xd8, 0xf5, 0xe3, 0x43, 0x41, 0xa7, 0x02, 0x22,
	0x1b, 0x7a, 0x02, 0x54, 0xb6, 0xee, 0xea, 0x5e, 0x3f, 0x56, 0x8f, 0x68, 0x0c, 0xe6, 0x82, 0xad,
	0x0a, 0x4a, 0x70, 0xbe, 0x48, 0x2b, 0xbb, 0xed, 0xea, 0xde, 0x30, 0x38, 0xe2, 0x61, 0x2e, 0xb7,
	0x3c, 0x6e, 0xce, 0xa0, 0x0f, 0x60, 0xc8, 0xce, 0x2a, 0xbb, 0xc3, 0x2b, 0x79, 0xd5, 0x08, 0xef,
	0xcb, 0xe2, 0x64, 0x23, 0xdb, 0x51, 0x27, 0x84, 0xc3, 0x1d, 0x69, 0x4f, 0x27, 0xa3, 0xdd, 0x4e,
	0x06, 0xdc, 0x56, 0x2e, 0x35, 0x4b, 0xf9, 0xa3, 0x41, 0x4f, 0xdd, 0xcf, 0xbe, 0x56, 0x4e, 0xa1,
	0xfb, 0xb0, 0x26, 0x74, 0xa9, 0xf2, 0xd9, 0x4d, 0x23, 0xff, 0x82, 0x4b, 0x22, 0x9e, 0x9c, 0x73,
	0xae, 0xc1, 0x6c, 0xe0, 0x3d, 0xd1, 0xdc, 0xdd, 0x68, 0xc0, 0x1d, 0xf9, 0x4a, 0x33, 0xd8, 0x3f,
	0x0d, 0x3a, 0x1c, 0xa2, 0x13, 0x30, 0x0a, 0x8a, 0xeb, 0x8c, 0x95, 0x2b, 0x6e, 0x33, 0x0c, 0x8e,
	0x9f, 0x57, 0xfc, 0xa9, 0x94, 0xe2, 0xed, 0x10, 0x0a, 0xe0, 0xe5, 0x92, 0xfd, 0xca, 0x29, 0xc3,
	0xcb, 0x84, 0xb2, 0x05, 0xae, 0x09, 0xcb, 0x93, 0x75, 0x49, 0xe5, 0x85, 0x1e, 0x2b, 0x71, 0x22,
	0xb5, 0x59, 0x49, 0x47, 0x3f, 0xc0, 0x50, 0x4e, 0xc8, 0x84, 0xde, 0x2c, 0xfa, 0x12, 0xdd, 0xcd,
	0x23, 0xeb, 0x00, 0x01, 0x74, 0xaf, 0x3e, 0xc7, 0xf3, 0x30, 0xb2, 0xb4, 0x27, 0x61, 0x1e, 0x46,
	0x57, 0x77, 0xf3, 0x7b, 0xab, 0x85, 0x5e, 0x80, 0x35, 0x09, 0xa3, 0xd9, 0xf7, 0xe4, 0x76, 0x12,
	0x5e, 0x5c, 0x26, 0x41, 0x32, 0xfe, 0x68, 0xe9, 0x7b, 0xe8, 0xb9, 0xd5, 0x7e, 0xe7, 0x00, 0x3c,
	0x7f, 0x02, 0x68, 0x00, 0xc6, 0x4d, 0x38, 0xbd, 0x1f, 0x9f, 0x9d, 0x06, 0xd6, 0xc1, 0x43, 0x97,
	0xff, 0x59, 0xef, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xc3, 0x07, 0xe1, 0x2e, 0x6f, 0x03, 0x00,
	0x00,
}
